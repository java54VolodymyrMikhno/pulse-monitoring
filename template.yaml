AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Streams DynamoDB table changes to EventBridge (uksb-1tthgi812) (tag:dynamodb-eventbridge-java)
Globals:
  Function:
    Handler: telran.pulse.monitoring.App::handleRequest
    Runtime: java17
    Architectures:
      - x86_64
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        LOGGER_LEVEL: INFO

Resources:
  #DynamoDB Streams specification
  PulseValuesStream:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: pulse_values
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
  PulseAbnormalValuesStream:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: pulse_abnormal_values
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES      
  PulseLastValue:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: pulse_last_value
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
       StreamViewType: NEW_AND_OLD_IMAGES  
  PulseJumpValues:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: pulse_jump_values
      AttributeDefinitions:
        - AttributeName: patientId
          AttributeType: N
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: patientId
          KeyType: HASH
        - AttributeName: timestamp
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5     
      StreamSpecification:
       StreamViewType: NEW_AND_OLD_IMAGES  
  
  PulseJumpAnalyzer:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: pulse-jump-analyzer
      Environment:
        Variables:
         FACTOR: "0.2"
      Policies:
        - Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - dynamodb:*
      Events:
        TableRecordChange:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            Stream: !GetAtt PulseValuesStream.StreamArn
            FilterCriteria: 
              Filters: 
              - Pattern: '{"eventName": ["INSERT"]}'        

  PulseValuesAnalyzer:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: pulse-values-analyzer
      Environment:
        Variables:
         RANGE_PROVIDER_URL: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/range"
          
      Policies:
        - Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - dynamodb:*   
      Events:
        TableRecordChange:
          Type: DynamoDB
          Properties:
            StartingPosition: LATEST
            Stream: !GetAtt PulseValuesStream.StreamArn
            FilterCriteria: 
              Filters: 
              - Pattern: '{"eventName": ["INSERT"]}'      
  
  RangeProviderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: range-provider
      Events:
        RangeProviderApi:
          Type: Api
          Properties:
            Path: /range
            Method: get
Outputs:
  RangeProviderApi:
    Description: "API Gateway URL for range-provider function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/range/"
  RangeProviderFunction:
    Description: "Range Provider Lambda Function ARN"
    Value: !GetAtt RangeProviderFunction.Arn
  RangeProviderFunctionRole:
    Description: "IAM Role for Range Provider function"
    Value: !GetAtt RangeProviderFunctionRole.Arn         